name: CI
on:
  push:
    branches:
      - master
    tags:
      - "*"
  pull_request:

# Cancel in-progress runs in current workflow.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Run tests and lints
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:9.6
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: test
          POSTGRES_USER: test
        ports:
          - 5432:5432
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: test
        ports:
          - 3306:3306
    env:
      TEST_MAILHOG_SMTP: "smtp://test:test@127.0.0.1:1025/?disable_starttls=true"
      TEST_MAILHOG_API: http://127.0.0.1:8025
      TEST_SELFSERVICE_OIDC_HYDRA_ADMIN: http://localhost:4445
      TEST_SELFSERVICE_OIDC_HYDRA_PUBLIC: http://localhost:4444
      TEST_SELFSERVICE_OIDC_HYDRA_INTEGRATION_ADDR: http://127.0.0.1:4499
      TEST_DATABASE_POSTGRESQL: "postgres://test:test@localhost:5432/postgres?sslmode=disable"
      TEST_DATABASE_MYSQL: "mysql://root:test@(localhost:3306)/mysql?parseTime=true&multiStatements=true"
      TEST_DATABASE_COCKROACHDB: "cockroach://root@localhost:26257/defaultdb?sslmode=disable"
    steps:
      - run: |
          docker create --name cockroach -p 26257:26257 \
            cockroachdb/cockroach:v22.1.3 start-single-node --insecure
          docker start cockroach
        name: Start CockroachDB
      - run: |
          docker create --name mailhog -p 8025:8025 -p 1025:1025 \
            mailhog/mailhog:v1.0.0 \
            MailHog -invite-jim -jim-linkspeed-affect=0.25 -jim-reject-auth=0.25 -jim-reject-recipient=0.25 -jim-reject-sender=0.25 -jim-disconnect=0.25 -jim-linkspeed-min=1250 -jim-linkspeed-max=12500
          docker start mailhog
        name: Start MailHog
      - run: |
          docker create --name hydra -p 4445:4445 -p 4444:4444 \
            -e DSN=memory \
            -e URLS_SELF_ISSUER=http://localhost:4444/ \
            -e URLS_LOGIN=http://localhost:4499/login \
            -e URLS_CONSENT=http://localhost:4499/consent \
            oryd/hydra:v2.0.2 serve all --dev
          docker start hydra
          docker logs -f hydra &> /tmp/hydra.log &
        name: Start Hydra
      - uses: ory/ci/checkout@master
        with:
          fetch-depth: 2
      - uses: actions/setup-go@v2
        with:
          go-version: "1.19"
      - run: go list -json > go.list
      - name: Run nancy
        uses: sonatype-nexus-community/nancy-github-action@v1.0.2
      - run: npm install
        name: Install node deps
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v2
        env:
          GOGC: 100
        with:
          args: --timeout 10m0s
          version: v1.49.0
          skip-go-installation: true
          skip-pkg-cache: true
      - name: Build Kratos
        run: make install
      - name: Run documentation tests
        run: make test-docs
      - name: Run go-acc (tests)
        run: make test-coverage

  test-e2e:
    name: Run end-to-end tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:9.6
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: test
          POSTGRES_USER: test
        ports:
          - 5432:5432
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: test
        ports:
          - 3306:3306
      mailslurper:
        image: oryd/mailslurper:latest-smtps
        ports:
          - 4436:4436
          - 4437:4437
          - 1025:1025
    env:
      TEST_DATABASE_POSTGRESQL: "postgres://test:test@localhost:5432/postgres?sslmode=disable"
      TEST_DATABASE_MYSQL: "mysql://root:test@(localhost:3306)/mysql?parseTime=true&multiStatements=true"
      TEST_DATABASE_COCKROACHDB: "cockroach://root@localhost:26257/defaultdb?sslmode=disable"
    strategy:
      matrix:
        database: ["postgres", "cockroach", "sqlite", "mysql"]
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: |
          docker create --name cockroach -p 26257:26257 \
            cockroachdb/cockroach:v20.2.5 start-single-node --insecure
          docker start cockroach
        name: Start CockroachDB
      - uses: browser-actions/setup-chrome@latest
        name: Install Chrome
      - uses: browser-actions/setup-firefox@latest
        name: Install Firefox
      - uses: browser-actions/setup-geckodriver@latest
        name: Install Geckodriver
      - uses: ory/ci/checkout@master
        with:
          fetch-depth: 2
      - run: |
          npm ci
          cd test/e2e; npm ci
          npm i -g expo-cli
        name: Install node deps
      - run: |
          sudo apt-get install -y moreutils gettext
        name: Install tools
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.19"
      - name: Install selfservice-ui-react-native
        uses: actions/checkout@v2
        with:
          repository: ory/kratos-selfservice-ui-react-native
          path: react-native-ui
      - run: |
          cd react-native-ui
          npm install
      - name: Install selfservice-ui-node
        uses: actions/checkout@v2
        with:
          repository: ory/kratos-selfservice-ui-node
          path: node-ui
      - run: |
          cd node-ui
          npm install
      - run: |
          echo 'RN_UI_PATH='"$(realpath react-native-ui)" >> $GITHUB_ENV
          echo 'NODE_UI_PATH='"$(realpath node-ui)" >> $GITHUB_ENV
      - if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: test/e2e/*.e2e.log

