name: Docker Image Scanners
on:
  push:
    branches:
      - 'master'
      - 'dockle-integration'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'master'

jobs:
  build-image: 
    runs-on: ubuntu-latest
    env:
      IMAGE: 'ghcr.io/tricky42/kratos:${{ github.sha }}'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build images
        shell: bash
        run: |
          KRATOS_IMAGE="${{ env.IMAGE }}" make docker
      - name: Push image(s) to ghcr.io
        shell: bash
        run: |
          echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY"
          docker push ${{ env.IMAGE }}

  anchore-scanner:
    runs-on: ubuntu-latest
    needs: build-image
    env:
      IMAGE: 'ghcr.io/tricky42/kratos:${{ github.sha }}'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Pull image(s)
        shell: bash
        run: |
          docker pull ${{ env.IMAGE }}
      - name: Scan image
        uses: anchore/scan-action@v3
        with:
          image: ${{ env.IMAGE }}
          fail-build: true
          severity-cutoff: high
      
  trivy-scanner:
    runs-on: ubuntu-latest
    needs: build-image
    env:
      IMAGE: 'ghcr.io/tricky42/kratos:${{ github.sha }}'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Pull image(s)
        shell: bash
        run: |
          docker pull ${{ env.IMAGE }}
      - name: Security Scan Image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE }}
          format: 'table'
          exit-code: '42'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  dockle-scanner:
    runs-on: ubuntu-latest
    needs: build-image
    env:
      IMAGE: 'ghcr.io/tricky42/kratos:${{ github.sha }}'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Pull image(s)
        shell: bash
        run: |
          docker pull ${{ env.IMAGE }}
      - name: Dockle Container Image Linter
        uses: erzz/dockle-action@v1.1.1
        with:
          image: ${{ env.IMAGE }}
          exit-code: 42
          failure-threshold: fatal

  clean-ghcr:
    runs-on: ubuntu-latest
    if: always()
    needs: [anchore-scanner, trivy-scanner, dockle-scanner]
    env:
      IMAGE: 'ghcr.io/tricky42/kratos:${{ github.sha }}'
    steps:
      - name: Remove Image
        shell: bash
        run: |
          echo "Add steps to remove image ${{ env.IMAGE }} ... "