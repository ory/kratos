/*
 * Ory Identities API
 *
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more.
 *
 * API version:
 * Contact: office@ory.sh
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// TransientPayloadContainer TransientPayloadContainer is a container for transient data to pass along to any webhooks
type TransientPayloadContainer struct {
	TransientPayload map[string]interface{} `json:"transient_payload,omitempty"`
}

// NewTransientPayloadContainer instantiates a new TransientPayloadContainer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransientPayloadContainer() *TransientPayloadContainer {
	this := TransientPayloadContainer{}
	return &this
}

// NewTransientPayloadContainerWithDefaults instantiates a new TransientPayloadContainer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransientPayloadContainerWithDefaults() *TransientPayloadContainer {
	this := TransientPayloadContainer{}
	return &this
}

// GetTransientPayload returns the TransientPayload field value if set, zero value otherwise.
func (o *TransientPayloadContainer) GetTransientPayload() map[string]interface{} {
	if o == nil || o.TransientPayload == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.TransientPayload
}

// GetTransientPayloadOk returns a tuple with the TransientPayload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransientPayloadContainer) GetTransientPayloadOk() (map[string]interface{}, bool) {
	if o == nil || o.TransientPayload == nil {
		return nil, false
	}
	return o.TransientPayload, true
}

// HasTransientPayload returns a boolean if a field has been set.
func (o *TransientPayloadContainer) HasTransientPayload() bool {
	if o != nil && o.TransientPayload != nil {
		return true
	}

	return false
}

// SetTransientPayload gets a reference to the given map[string]interface{} and assigns it to the TransientPayload field.
func (o *TransientPayloadContainer) SetTransientPayload(v map[string]interface{}) {
	o.TransientPayload = v
}

func (o TransientPayloadContainer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TransientPayload != nil {
		toSerialize["transient_payload"] = o.TransientPayload
	}
	return json.Marshal(toSerialize)
}

type NullableTransientPayloadContainer struct {
	value *TransientPayloadContainer
	isSet bool
}

func (v NullableTransientPayloadContainer) Get() *TransientPayloadContainer {
	return v.value
}

func (v *NullableTransientPayloadContainer) Set(val *TransientPayloadContainer) {
	v.value = val
	v.isSet = true
}

func (v NullableTransientPayloadContainer) IsSet() bool {
	return v.isSet
}

func (v *NullableTransientPayloadContainer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransientPayloadContainer(val *TransientPayloadContainer) *NullableTransientPayloadContainer {
	return &NullableTransientPayloadContainer{value: val, isSet: true}
}

func (v NullableTransientPayloadContainer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransientPayloadContainer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
