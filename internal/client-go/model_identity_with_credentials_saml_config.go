/*
Ory Identities API

This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more.

API version:
Contact: office@ory.sh
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the IdentityWithCredentialsSamlConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityWithCredentialsSamlConfig{}

// IdentityWithCredentialsSamlConfig Payload of SAML providers
type IdentityWithCredentialsSamlConfig struct {
	// A list of SAML Providers
	Providers            []IdentityWithCredentialsSamlConfigProvider `json:"providers,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _IdentityWithCredentialsSamlConfig IdentityWithCredentialsSamlConfig

// NewIdentityWithCredentialsSamlConfig instantiates a new IdentityWithCredentialsSamlConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityWithCredentialsSamlConfig() *IdentityWithCredentialsSamlConfig {
	this := IdentityWithCredentialsSamlConfig{}
	return &this
}

// NewIdentityWithCredentialsSamlConfigWithDefaults instantiates a new IdentityWithCredentialsSamlConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityWithCredentialsSamlConfigWithDefaults() *IdentityWithCredentialsSamlConfig {
	this := IdentityWithCredentialsSamlConfig{}
	return &this
}

// GetProviders returns the Providers field value if set, zero value otherwise.
func (o *IdentityWithCredentialsSamlConfig) GetProviders() []IdentityWithCredentialsSamlConfigProvider {
	if o == nil || IsNil(o.Providers) {
		var ret []IdentityWithCredentialsSamlConfigProvider
		return ret
	}
	return o.Providers
}

// GetProvidersOk returns a tuple with the Providers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityWithCredentialsSamlConfig) GetProvidersOk() ([]IdentityWithCredentialsSamlConfigProvider, bool) {
	if o == nil || IsNil(o.Providers) {
		return nil, false
	}
	return o.Providers, true
}

// HasProviders returns a boolean if a field has been set.
func (o *IdentityWithCredentialsSamlConfig) HasProviders() bool {
	if o != nil && !IsNil(o.Providers) {
		return true
	}

	return false
}

// SetProviders gets a reference to the given []IdentityWithCredentialsSamlConfigProvider and assigns it to the Providers field.
func (o *IdentityWithCredentialsSamlConfig) SetProviders(v []IdentityWithCredentialsSamlConfigProvider) {
	o.Providers = v
}

func (o IdentityWithCredentialsSamlConfig) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityWithCredentialsSamlConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Providers) {
		toSerialize["providers"] = o.Providers
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *IdentityWithCredentialsSamlConfig) UnmarshalJSON(data []byte) (err error) {
	varIdentityWithCredentialsSamlConfig := _IdentityWithCredentialsSamlConfig{}

	err = json.Unmarshal(data, &varIdentityWithCredentialsSamlConfig)

	if err != nil {
		return err
	}

	*o = IdentityWithCredentialsSamlConfig(varIdentityWithCredentialsSamlConfig)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "providers")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIdentityWithCredentialsSamlConfig struct {
	value *IdentityWithCredentialsSamlConfig
	isSet bool
}

func (v NullableIdentityWithCredentialsSamlConfig) Get() *IdentityWithCredentialsSamlConfig {
	return v.value
}

func (v *NullableIdentityWithCredentialsSamlConfig) Set(val *IdentityWithCredentialsSamlConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityWithCredentialsSamlConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityWithCredentialsSamlConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityWithCredentialsSamlConfig(val *IdentityWithCredentialsSamlConfig) *NullableIdentityWithCredentialsSamlConfig {
	return &NullableIdentityWithCredentialsSamlConfig{value: val, isSet: true}
}

func (v NullableIdentityWithCredentialsSamlConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityWithCredentialsSamlConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
