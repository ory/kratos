/*
 * Ory Identities API
 *
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more.
 *
 * API version:
 * Contact: office@ory.sh
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// ContinueWithVerificationUiAllOfFlow struct for ContinueWithVerificationUiAllOfFlow
type ContinueWithVerificationUiAllOfFlow struct {
	Id *string `json:"id,omitempty"`
}

// NewContinueWithVerificationUiAllOfFlow instantiates a new ContinueWithVerificationUiAllOfFlow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContinueWithVerificationUiAllOfFlow() *ContinueWithVerificationUiAllOfFlow {
	this := ContinueWithVerificationUiAllOfFlow{}
	return &this
}

// NewContinueWithVerificationUiAllOfFlowWithDefaults instantiates a new ContinueWithVerificationUiAllOfFlow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContinueWithVerificationUiAllOfFlowWithDefaults() *ContinueWithVerificationUiAllOfFlow {
	this := ContinueWithVerificationUiAllOfFlow{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ContinueWithVerificationUiAllOfFlow) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContinueWithVerificationUiAllOfFlow) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ContinueWithVerificationUiAllOfFlow) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ContinueWithVerificationUiAllOfFlow) SetId(v string) {
	o.Id = &v
}

func (o ContinueWithVerificationUiAllOfFlow) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableContinueWithVerificationUiAllOfFlow struct {
	value *ContinueWithVerificationUiAllOfFlow
	isSet bool
}

func (v NullableContinueWithVerificationUiAllOfFlow) Get() *ContinueWithVerificationUiAllOfFlow {
	return v.value
}

func (v *NullableContinueWithVerificationUiAllOfFlow) Set(val *ContinueWithVerificationUiAllOfFlow) {
	v.value = val
	v.isSet = true
}

func (v NullableContinueWithVerificationUiAllOfFlow) IsSet() bool {
	return v.isSet
}

func (v *NullableContinueWithVerificationUiAllOfFlow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContinueWithVerificationUiAllOfFlow(val *ContinueWithVerificationUiAllOfFlow) *NullableContinueWithVerificationUiAllOfFlow {
	return &NullableContinueWithVerificationUiAllOfFlow{value: val, isSet: true}
}

func (v NullableContinueWithVerificationUiAllOfFlow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContinueWithVerificationUiAllOfFlow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
