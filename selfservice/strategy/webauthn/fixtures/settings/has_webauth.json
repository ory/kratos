[
  {
    "attributes": {
      "disabled": false,
      "name": "csrf_token",
      "required": true,
      "type": "hidden",
      "value": "aWJlY3F1bHp1aXN2YnFvY2NzdHpjNnJ0YnkxNnI2Mzk="
    },
    "group": "default",
    "messages": [],
    "meta": {},
    "type": "input"
  },
  {
    "attributes": {
      "disabled": false,
      "name": "webauthn_remove",
      "type": "submit",
      "value": "626172626172"
    },
    "group": "webauthn",
    "messages": [],
    "meta": {
      "label": {
        "context": {
          "added_at": "0001-01-01T00:00:00Z",
          "display_name": "bar"
        },
        "id": 1050012,
        "text": "Remove security key \"bar\"",
        "type": "info"
      }
    },
    "type": "input"
  },
  {
    "attributes": {
      "disabled": false,
      "name": "webauthn_remove",
      "type": "submit",
      "value": "666f6f666f6f"
    },
    "group": "webauthn",
    "messages": [],
    "meta": {
      "label": {
        "context": {
          "added_at": "0001-01-01T00:00:00Z",
          "display_name": "foo"
        },
        "id": 1050012,
        "text": "Remove security key \"foo\"",
        "type": "info"
      }
    },
    "type": "input"
  },
  {
    "attributes": {
      "disabled": false,
      "name": "webauthn_register_displayname",
      "type": "text",
      "value": ""
    },
    "group": "webauthn",
    "messages": [],
    "meta": {
      "label": {
        "id": 1050013,
        "text": "Name of the security key",
        "type": "info"
      }
    },
    "type": "input"
  },
  {
    "attributes": {
      "disabled": false,
      "name": "webauthn_register_trigger",
      "onclick": "window.__oryWebAuthnRegistration({\"publicKey\":{\"challenge\":\"h7BkjEGXvBnOPDrDsBUiSRB90QamqOtWbprYhcaBwro=\",\"rp\":{\"name\":\"Ory Corp\",\"id\":\"localhost\"},\"user\":{\"name\":\"placeholder\",\"icon\":\"https://via.placeholder.com/128\",\"displayName\":\"placeholder\",\"id\":\"uJTun1EFRNurSuKVCLV9ZA==\"},\"pubKeyCredParams\":[{\"type\":\"public-key\",\"alg\":-7},{\"type\":\"public-key\",\"alg\":-35},{\"type\":\"public-key\",\"alg\":-36},{\"type\":\"public-key\",\"alg\":-257},{\"type\":\"public-key\",\"alg\":-258},{\"type\":\"public-key\",\"alg\":-259},{\"type\":\"public-key\",\"alg\":-37},{\"type\":\"public-key\",\"alg\":-38},{\"type\":\"public-key\",\"alg\":-39},{\"type\":\"public-key\",\"alg\":-8}],\"authenticatorSelection\":{\"requireResidentKey\":false,\"userVerification\":\"preferred\"},\"timeout\":60000}})",
      "onload": "if (\n  (window \u0026\u0026 window.__oryWebAuthnLogin \u0026\u0026 window.__oryWebAuthnRegistration) ||\n  (!window \u0026\u0026 __oryWebAuthnLogin \u0026\u0026 __oryWebAuthnRegistration)\n) {\n  // Already registered these functions, do nothing.\n} else {\n  function __oryWebAuthnBufferDecode(value) {\n    return Uint8Array.from(atob(value), function (c) {\n      return c.charCodeAt(0)\n    });\n  }\n\n  function __oryWebAuthnBufferEncode(value) {\n    return btoa(String.fromCharCode.apply(null, new Uint8Array(value)))\n      .replace(/\\+/g, '-')\n      .replace(/\\//g, '_')\n      .replace(/=/g, '');\n  }\n\n  function __oryWebAuthnLogin(opt, resultQuerySelector = '*[name=\"webauthn_login\"]', triggerQuerySelector = '*[name=\"webauthn_login_trigger\"]') {\n    if (!window.PublicKeyCredential) {\n      alert('This browser does not support WebAuthn!');\n    }\n\n    opt.publicKey.challenge = __oryWebAuthnBufferDecode(opt.publicKey.challenge);\n    opt.publicKey.allowCredentials = opt.publicKey.allowCredentials.map(function (value) {\n      return {\n        ...value,\n        id: __oryWebAuthnBufferDecode(value.id)\n      }\n    });\n\n    navigator.credentials.get(opt).then(function (credential) {\n      document.querySelector(resultQuerySelector).value = JSON.stringify({\n        id: credential.id,\n        rawId: __oryWebAuthnBufferEncode(credential.rawId),\n        type: credential.type,\n        response: {\n          authenticatorData: __oryWebAuthnBufferEncode(credential.response.authenticatorData),\n          clientDataJSON: __oryWebAuthnBufferEncode(credential.response.clientDataJSON),\n          signature: __oryWebAuthnBufferEncode(credential.response.signature),\n          userHandle: __oryWebAuthnBufferEncode(credential.response.userHandle),\n        },\n      })\n\n      document.querySelector(triggerQuerySelector).closest('form').submit()\n    }).catch((err) =\u003e {\n      alert(err)\n    })\n  }\n\n  function __oryWebAuthnRegistration(opt, resultQuerySelector = '*[name=\"webauthn_register\"]', triggerQuerySelector = '*[name=\"webauthn_register_trigger\"]') {\n    if (!window.PublicKeyCredential) {\n      alert('This browser does not support WebAuthn!');\n    }\n\n    opt.publicKey.user.id = __oryWebAuthnBufferDecode(opt.publicKey.user.id);\n    opt.publicKey.challenge = __oryWebAuthnBufferDecode(opt.publicKey.challenge);\n\n    if (opt.publicKey.excludeCredentials) {\n      opt.publicKey.excludeCredentials = opt.publicKey.excludeCredentials.map(function (value) {\n        return {\n          ...value,\n          id: __oryWebAuthnBufferDecode(value.id)\n        }\n      })\n    }\n\n    navigator.credentials.create(opt).then(function (credential) {\n      document.querySelector(resultQuerySelector).value = JSON.stringify({\n        id: credential.id,\n        rawId: __oryWebAuthnBufferEncode(credential.rawId),\n        type: credential.type,\n        response: {\n          attestationObject: __oryWebAuthnBufferEncode(credential.response.attestationObject),\n          clientDataJSON: __oryWebAuthnBufferEncode(credential.response.clientDataJSON),\n        },\n      })\n\n      document.querySelector(triggerQuerySelector).closest('form').submit()\n    }).catch((err) =\u003e {\n      alert(err)\n    })\n  }\n\n  if (window) {\n    window.__oryWebAuthnLogin = __oryWebAuthnLogin\n    window.__oryWebAuthnRegistration = __oryWebAuthnRegistration\n  }\n}\n",
      "type": "button",
      "value": ""
    },
    "group": "webauthn",
    "messages": [],
    "meta": {
      "label": {
        "id": 1050012,
        "text": "Add security key",
        "type": "info"
      }
    },
    "type": "input"
  },
  {
    "attributes": {
      "disabled": false,
      "name": "webauthn_register",
      "type": "hidden",
      "value": ""
    },
    "group": "webauthn",
    "messages": [],
    "meta": {},
    "type": "input"
  }
]
